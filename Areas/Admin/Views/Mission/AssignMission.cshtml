@model AdminAssignMissionVM
@{
    ViewData["Title"] = "AssignMission";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section Css {

    <link rel="stylesheet" href="~/assets/libs/choices.js/public/assets/styles/choices.min.css" asp-append-version="true">

    <!-- Tom Select Css -->
    <link rel="stylesheet" href="~/assets/libs/tom-select/css/tom-select.default.min.css" asp-append-version="true">

    <!-- Tom Select Css -->
    <style>

        .non-clickable {
            pointer-events: none; /* Tıklanamaz yapar */
            opacity: 0.5; /* Rengi soluk yapar */
        }
        /* Grid düzeni için stil */
        .row-grid {
            display: grid;
            grid-template-columns: 1fr 1fr; /* İki sütun eşit genişlikte */
            gap: 20px; /* Sütunlar arası boşluk */
        }

        /* Mevcut stilleri koruyarak eklenen yeni stiller */
        .outer-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 6px;
        }

        .dragula-container {
            border: 2px dashed #ccc;
            padding: 10px;
            min-height: 100px;
        }

        .index {
            border: 2px dashed #ccc;
            padding: 10px;
            min-height: 100px;
        }

        .draggable-item {
            padding: 5px;
            border: 1px solid #ddd;
            margin-bottom: 5px;
            background-color: #f8f9fa;
            cursor: move;
        }

        .box {
        }
    </style>

}
<div class="content">

    <!-- Start::main-content -->
    <div class="main-content">

        <!-- Page Header -->
        <div class="block justify-between page-header sm:flex">
            <div>
                <h3 class="text-gray-700 hover:text-gray-900 dark:text-white dark:hover:text-white text-2xl font-medium"> Görev atama Sayfası</h3>
            </div>
            <ol class="flex items-center whitespace-nowrap min-w-0">
                <li class="text-sm">
                    <a class="flex items-center font-semibold text-primary hover:text-primary dark:text-primary truncate" href="javascript:void(0);">
                        Pages
                        <i class="ti ti-chevrons-right flex-shrink-0 mx-3 overflow-visible text-gray-300 dark:text-gray-300 rtl:rotate-180"></i>
                    </a>
                </li>
                <li class="text-sm text-gray-500 hover:text-primary dark:text-white/70 " aria-current="page">

                </li>
            </ol>
        </div>
        <!-- Page Header Close -->
        <!-- Start::row-1 -->
        <div id="hidden-inputs-container">
        </div>

        <div class="row-grid">
            <div class="box">
                <div class="box-header">
                    <h5 class="box-title">Sayfanın İçeriği</h5>
                </div>
                <div class="box-body">
                    @if (Model.PageVMs.Count > 0)
                    {
                        @foreach (var item in Model.PageVMs.OrderBy(x => x.Order))
                        {
                            bool isMatched = Model.Missions.Any(mission => mission.PageID == item.ID);

                            string cssClass = isMatched ? "dragula-container non-clickable" : "dragula-container";

                            if (item.PageType == 0)
                            {
                                <div id="@item.ID" class="@cssClass">
                                   Görevli Kurum: @item.InstitutionName Sayfanın İçeriği: Görsel
                                </div>
                            }
                            else if (item.PageType == 1)
                            {
                                <div id="@item.ID" class="@cssClass">
                                    Görevli Kurum: @item.InstitutionName Sayfanın İçeriği: Metin
                                </div>
                            }
                            else
                            {
                                <div id="@item.ID" class="@cssClass">
                                    Görevli Kurum: @item.InstitutionName Sayfanın İçeriği: Veri
                                </div>
                            }
                        }
                       
                    }
                    else
                    {
                        <div class="dragula-container ">
                            Bu Sayfanın içeriği Düzenlenmemiştir Düzenlemek için <a href="/Admin/Page/ChoosePageIndex/@Model.CreateMission.CategoryID">Tıklayınız.</a>
                        </div>
                    }
    



                </div>
            </div>
            @if (Model != null)
            {

                <form method="post" action="/Admin/Mission/AssignMission">
                    <input type="hidden" asp-for="@Model.CreateMission.CategoryID" />
                    <input type="hidden" id="selectedDivID" name="selectedDivID" value="" />
                    <div class="grid grid-cols-12 gap-x-6">
                        <div class="col-span-12 hidden md:col-span-12 xl:!col-span-12">
                            <div class="box">
                                <div class="box-header">
                                </div>
                                <div class="box-body">
                                    <input type="hidden" class="ti-input" id="input-tags" autocomplete="off" placeholder="Enter the Text">
                                </div>
                            </div>
                        </div>
                        <div class="col-span-12  md:col-span-12 xl:!col-span-12">
                            <div class="box">
                                <div class="box-header">
                                    <h5 class="box-title">Birimler yada Kişiler Seçin</h5>
                                </div>
                                <div class="box-body">
                                    <select asp-for="CreateMission.InstitutionID" class="ti-form-select !p-0" id="select-beast" autocomplete="off">
                                        @foreach (var item in Model.InstitutionVMs)
                                        {
                                            <option value="@item.ID">@item.Name</option>
                                        }


                                    </select>
                                    <textarea asp-for="@Model.CreateMission.Mission" class="ti-form-input" rows="3"
                                             ></textarea>

                                    <button type="submit" class="ti-btn ti-btn-primary">Görev Oluştur</button>
                                </div>
                            </div>
                        </div>


                    </div>


                </form>




            }
           

        </div>
      


        <!-- End::row-1 -->

    </div>
    <!-- Start::main-content -->

</div>

@section scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var containers = document.getElementsByClassName("dragula-container");
            var selectedContainer = null; // Önceki seçimi tutacak değişken

            for (var i = 0; i < containers.length; i++) {
                containers[i].addEventListener('click', function () {

                    if (selectedContainer) {
                        selectedContainer.style.backgroundColor = ""; // Önceki seçimin rengini sıfırla
                    }
                    this.style.backgroundColor = "#f0f0f0"; // Yeni seçilen div'in rengini değiştir
                    selectedContainer = this; // Seçilen div'i kaydet

                    document.getElementById('selectedDivID').value = this.id;
                });
            }
        });

            
    </script>

    <script>
        function handleSelectChange(selectElement) {
            var selectedValue = selectElement.value;
            // Perform actions with the selectedValue
            console.log("Selected Value: " + selectedValue);

            // Example: update an input field or perform other actions
            // document.getElementById('someInputField').value = selectedValue;

            // If needed, you can also make an AJAX call to send the value to the server
        }
    </script>



    <script src="~/assets/libs/choices.js/public/assets/scripts/choices.min.js"></script>
    <script src="~/assets/js/choices.js"></script>

    <!-- Tom Select JS -->
    <script src="~/assets/libs/tom-select/js/tom-select.complete.min.js"></script>
    <script src="~/assets/js/tom-select.js"></script>
}


